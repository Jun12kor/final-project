find_password 화면 한번에 아이디 이메일 비밀번호까지 변경햇던 코드

<!--비밀번호 찾기 화면에서 한번에 변경하던 코드-->
<!--{% extends 'base.html' %}-->

<!--{% block content %}-->
<!--<div class="container mt-5">-->
<!--    <h1 class="mb-4">비밀번호 찾기</h1>-->
<!--20231124 수정-->
<!--     해당 아이디와 이메일에 매치되는 비밀번호 변경 폼 -->
<!--    {% if not password_found %}-->
<!--        <form method="post" action="{% url 'find_password' %}">-->
<!--            {% csrf_token %}-->
<!--            {{ form.as_p }}-->
<!--            <button type="submit" name="action" value="change" class="btn btn-primary">비밀번호 변경</button>-->
<!--        </form>-->
<!--       알림 메시지 -->
<!--        {% if messages %}-->
<!--            <ul class="messages" style="display: none;"> &lt;!&ndash; 알림 메시지가 표시되지 않도록 숨김 처리 &ndash;&gt;-->
<!--                {% for message in messages %}-->
<!--                    <li{% if message.tags %} class="{{ message.tags }}"{% endif %}>{{ message }}</li>-->
<!--                {% endfor %}-->
<!--            </ul>-->
<!--        {% endif %}-->
<!--    {% else %}-->
<!--        {% if password_changed %}-->
<!--             비밀번호가 변경되었을 때 메시지 출력 -->
<!--            <div class="alert alert-success mt-4" role="alert">-->
<!--                비밀번호가 성공적으로 변경되었습니다. 다시 로그인해주세요.-->
<!--            </div>-->
<!--        {% else %}-->
<!--           비밀번호를 찾았을 때 새로운 비밀번호 입력 폼 출력 -->
<!--            <div class="alert alert-success mt-4" role="alert">-->
<!--                사용자를 찾았습니다. 새로운 비밀번호를 입력하세요.-->
<!--            </div>-->
<!--            <form method="post" action="{% url 'find_password' %}">-->
<!--                {% csrf_token %}-->
<!--                <input type="hidden" name="username" value="{{ user.username }}">-->
<!--                <input type="hidden" name="email" value="{{ user.email }}">-->
<!--                <div class="mb-3">-->
<!--                    <label for="new_password" class="form-label">새 비밀번호</label>-->
<!--                    <input type="password" class="form-control" id="new_password" name="new_password" required>-->
<!--                </div>-->
<!--                <div class="mb-3">-->
<!--                    <label for="new_password_confirm" class="form-label">새 비밀번호 확인</label>-->
<!--                    <input type="password" class="form-control" id="new_password_confirm" name="new_password_confirm" required>-->
<!--                </div>-->
<!--                <button type="submit" class="btn btn-primary">비밀번호 변경</button>-->
<!--            </form>-->
<!--        {% endif %}-->
<!--    {% endif %}-->
<!--</div>-->
<!-- JavaScript 코드 추가 -->
<!--해당되는 메시지 일때만 팜업창으로 뜨도록-->
<!--<script>-->
<!--    document.addEventListener('DOMContentLoaded', function() {-->
<!--        var messages = document.querySelectorAll('.messages li');-->
<!--        messages.forEach(function(message) {-->
<!--            if (message.innerText.includes('새 비밀번호가 일치하지 않습니다!') || message.innerText.includes('해당 아이디 또는 이메일로 된 사용자가 없습니다!')) {-->
<!--                alert(message.innerText);-->
<!--            }-->
<!--        });-->
<!--    });-->
<!--</script>-->
<!--{% endblock content %}-->


기존 information_modification.html

{% extends 'base.html' %}
{% block content %}
<style>
    .container {
        width: 50%;
        margin: auto;
    }
.profile_title {
        padding-right: 20px;
    }
</style>
<div class="container" >
    <div style="margin-top: 5rem !important;">
        <div class="col-12">

            <div class="row justify-content-center">
                <div class="card" style="padding-left: 0px; padding-right: 0px;">
                    <div class="card-header bg-primary text-white text-center">
                        <strong style="font-size: 18px;"><i class="fas fa-user-cog"></i>&nbsp;&nbsp;내 정보</strong>
                    </div>
                    <div><br>
                            {% if messages %}
                            <ul class="messages">
                                {% for message in messages %}
                                <li {% if message.tags %} class="{{ message.tags }}"{% endif %}>{{ message }}</li>
                                {% endfor %}
                            </ul>
                            {% endif %}
                            </div>
                    <div class="card-body">
                        <table style="color:black; margin-left:10px;">
                            <tr>
                                <td class="profile_title">아이디</td>
                                <td class="profile_content">{{ user.username }}</td>
                            </tr>
                            <tr>
                                <td class="profile_title">이메일</td>
                                <td class="profile_content">{{ user.email }}</td>
                            </tr>
                            <tr>
                                <td class="profile_title">성</td>
                                <td class="profile_content">{{ user.last_name }}</td>
                            </tr>
                            <tr>
                                <td class="profile_title">이름</td>
                                <td class="profile_content">{{ user.first_name }}</td>
                            </tr>

                        </table>

                        <hr>
                        <div style="text-align: center;">
                        <!-- <div style="margin-left: 10px;"> -->
                            <a href="{% url 'profile_edit' %}" style="color:#d14040f2; font-size:15px;"><i class="fas fa-user-edit"></i>&nbsp;내정보수정</a>&nbsp;&middot;&nbsp;
                            <a href="{% url 'profile_password' %}" style="color:#d14040f2; font-size:15px;"><i class="fas fa-user-lock"></i>&nbsp;비밀번호변경</a>&nbsp;&middot;&nbsp;
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

{% endblock content %}


information_modification 코드2 <- 새로고침하면 이미지 바뀌는 코드
사진이 바로 업데이트되지 않는 문제는 JavaScript에서 서버로부터 새 이미지 URL을 받아와서 DOM을 업데이트하는 로직에 문제가 있을 수 있어.

현재의 JavaScript 코드는 이미지를 업로드하고 서버에서 받은 URL을 기반으로 이미지를 변경하는 방식이야. 이 방식은 성공적으로 이미지를 업로드하고 나서 새로고침을 해야만 변경된 이미지를 볼 수 있어.

이 문제를 해결하기 위해서는 JavaScript에서 이미지를 업로드한 후에 서버로부터 새 이미지 URL을 받아온 다음, 받은 URL로 DOM을 직접 업데이트해야 해. 그러면 사용자가 페이지를 새로고침하지 않아도 이미지가 바로 변경될 거야.

그것을 구현하기 위해서는 fetch 요청에서 서버로부터 받은 이미지 URL을 이용하여 이미지 DOM을 업데이트하는 부분을 수정해야 할 거야. 이미지를 변경하는 코드를 살펴보고, 새 URL을 받아온 후에 DOM을 업데이트하도록 로직을 변경해보는 것이 좋을 것 같아.

현재 JavaScript 코드에서 이미지를 업로드하고 서버로부터 새 이미지 URL을 받아와서 DOM을 업데이트하는 부분을 수정해보면 도움이 될 수 있어. 아래는 수정을 위해 제안하는 방향입니다:

<!-- information_modification.html -->
{% extends 'base.html' %}
{% block content %}
<style>
    /* 스타일링 코드 */
</style>

<div class="container">
    <!-- 왼쪽 상단: 프로필 사진 -->
    <div class="profile-section">
        <div class="profile-picture">
            {% if user_profile.profile_picture %}
                <img id="profile-image" src="{{ user_profile.profile_picture.url }}" alt="프로필 사진">
            {% else %}
                <p>프로필 사진이 없습니다.</p>
            {% endif %}
            <!-- 프로필 사진 업로드 폼 -->
            <form method="post" enctype="multipart/form-data" id="profile-upload-form">
                {% csrf_token %}
                <input type="file" name="profile_picture" id="file-input">
                <input type="submit" value="사진 업로드">
            </form>
        </div>

        <!-- 오른쪽 상단: 회원 정보 -->
        <div class="user-info">
            <p>아이디: {{ user.username }}</p>
            <p>이메일: {{ user.email }}</p>
            <p>성: {{ user.last_name }}</p>
            <p>이름: {{ user.first_name }}</p>
        </div>
    </div>

    <!-- 프로필 사진 변경 버튼 아래: 작성한 글 목록 -->
    <div class="user-posts">
        <!-- 작성한 글 목록 출력 -->
    </div>
</div>

<script>
    document.getElementById('profile-upload-form').addEventListener('submit', function(event) {
        event.preventDefault();
        const fileInput = document.getElementById('file-input');
        const formData = new FormData();
        formData.append('profile_picture', fileInput.files[0]);

        fetch('/upload_profile_picture/', {
            method: 'POST',
            body: formData,
            headers: {
                'X-CSRFToken': '{{ csrf_token }}'
            }
        })
        .then(response => {
            if (response.ok) {
                return response.json(); // JSON 형식으로 응답을 받음
            }
            throw new Error('Network response was not ok.');
        })
        .then(data => {
            const imageUrl = data.profile_picture_url; // 서버로부터 받은 새 이미지 URL
            document.getElementById('profile-image').src = imageUrl;
            // 프로필 이미지 업로드 성공 시 이미지 업데이트
        })
        .catch(error => {
            console.error('There has been a problem with your fetch operation:', error);
            // 프로필 이미지 업로드 실패 시 에러 처리
        });
    });
</script>
{% endblock content %}

-----------information_modification.html 코드3 <- 사진 업로드하면 이미지 바로 바뀌는 코드

코드를 살펴보았는데, 기본적인 부분은 이미지를 업로드하고 새 이미지 URL을 받아온 다음, JavaScript를 통해 해당 이미지를 DOM에 반영하고 있습니다. 그러나 실제로 이미지를 바로 업데이트하는 부분에 문제가 있을 수 있습니다.

우선, upload_profile_picture 뷰에서 이미지가 업로드되고 새 URL을 전달하고 있어야 합니다. 하지만 해당 코드에서는 새 이미지 URL을 반환하고 페이지를 리디렉션하는 대신, 페이지 리로드 없이 JavaScript를 통해 이미지를 업데이트하려는 것으로 보입니다.

JavaScript 부분에서 이미지를 업데이트하는 코드는 크게 문제가 없어 보입니다. 하지만 실제로 서버에서 새 이미지 URL을 받아오는 부분이 필요합니다. upload_profile_picture 뷰에서 새 이미지 URL을 반환하는 대신, 해당 URL을 JSON 형식으로 전달해야 합니다.

따라서 upload_profile_picture 뷰에서 이미지를 업로드하고 새 URL을 JSON 형식으로 반환하도록 수정해야 합니다. 그 후 JavaScript 코드에서 받은 URL을 이용하여 DOM을 업데이트할 수 있을 것입니다.

# views.py 이렇게 변경

from django.http import JsonResponse

def upload_profile_picture(request):
    if request.method == 'POST':
        profile_picture = request.FILES['profile_picture']
        # 사용자의 프로필 객체 가져오기
        profile, created = Profile.objects.get_or_create(user=request.user)
        # 프로필 사진 업데이트 또는 저장
        profile.profile_picture = profile_picture
        profile.save()

        # 새 이미지 URL 가져오기
        new_image_url = profile.profile_picture.url

        # 새 이미지 URL을 JSON 형태로 반환
        return JsonResponse({'profile_picture_url': new_image_url})
    # POST 요청이 아닐 경우 다른 처리
    # ...
위의 코드는 upload_profile_picture 뷰에서 이미지를 업로드하고, 새 이미지 URL을 JSON 형식으로 반환하도록 수정한 부분입니다. 이렇게 하면 JavaScript에서 해당 URL을 받아와서 이미지를 업데이트할 수 있을 것입니다.

그리고 JavaScript 코드에서 이미지를 업데이트하는 부분은 아래와 같이 수정되어야 할 것입니다.

javascript
Copy code
// JavaScript 코드
.then(data => {
    const imageUrl = data.profile_picture_url; // 서버로부터 받은 새 이미지 URL
    // 이미지 업데이트
    const profileImage = document.getElementById('profile-image');
    profileImage.src = imageUrl;
    // 프로필 이미지 업로드 성공 시 이미지 업데이트
})
위의 변경 사항을 적용하면, 이미지를 업로드한 후 JavaScript 코드에서 받은 URL을 이용하여 DOM을 업데이트할 수 있게 됩니다. 이렇게 하면 새로고침 없이도 이미지가 변경될 것입니다.

-------------------수정된 html 코드
<!-- information_modification.html -->
{% extends 'base.html' %}
{% block content %}
<style>
    /* 스타일링 코드 */
</style>

<div class="container">
    <!-- 왼쪽 상단: 프로필 사진 -->
    <div class="profile-section">
        <div class="profile-picture">
            {% if user_profile.profile_picture %}
                <img id="profile-image" src="{{ user_profile.profile_picture.url }}" alt="프로필 사진">
            {% else %}
                <p>프로필 사진이 없습니다.</p>
            {% endif %}
            <!-- 프로필 사진 업로드 폼 -->
            <form method="post" enctype="multipart/form-data" id="profile-upload-form">
                {% csrf_token %}
                <input type="file" name="profile_picture" id="file-input">
                <input type="submit" value="사진 업로드">
            </form>
        </div>

        <!-- 오른쪽 상단: 회원 정보 -->
        <div class="user-info">
            <p>아이디: {{ user.username }}</p>
            <p>이메일: {{ user.email }}</p>
            <p>성: {{ user.last_name }}</p>
            <p>이름: {{ user.first_name }}</p>
        </div>
    </div>

    <!-- 프로필 사진 변경 버튼 아래: 작성한 글 목록 -->
    <div class="user-posts">
        <!-- 작성한 글 목록 출력 -->
    </div>
</div>

<script>
    document.getElementById('profile-upload-form').addEventListener('submit', function(event) {
        event.preventDefault();
        const fileInput = document.getElementById('file-input');
        const formData = new FormData();
        formData.append('profile_picture', fileInput.files[0]);

        fetch('/upload_profile_picture/', {
            method: 'POST',
            body: formData,
            headers: {
                'X-CSRFToken': '{{ csrf_token }}'
            }
        })
        .then(response => {
            if (response.ok) {
                return response.json(); // JSON 형식으로 응답을 받음
            }
            throw new Error('Network response was not ok.');
        })

        .then(data => {
            const imageUrl = data.profile_picture_url; // 서버로부터 받은 새 이미지 URL
            // 이미지 업데이트
            const profileImage = document.getElementById('profile-image');
            profileImage.src = imageUrl;
            // 프로필 이미지 업로드 성공 시 이미지 업데이트
        })

        .catch(error => {
            console.error('There has been a problem with your fetch operation:', error);
            // 프로필 이미지 업로드 실패 시 에러 처리
        });
    });

</script>
{% endblock content %}

------information_modification.html 코드4 <- 게시글까지 가져오는 코드
{% extends 'base.html' %}

{% block content %}
<style>
    /* 스타일링 코드 */
</style>

<div class="container">
    <!-- 왼쪽 상단: 프로필 사진 -->
    <div class="profile-section">
        <div class="profile-picture">
            {% if user_profile.profile_picture %}
                <img id="profile-image" src="{{ user_profile.profile_picture.url }}" alt="프로필 사진">
            {% else %}
                <p>프로필 사진이 없습니다.</p>
            {% endif %}
            <!-- 프로필 사진 업로드 폼 -->
            <form method="post" enctype="multipart/form-data" id="profile-upload-form">
                {% csrf_token %}
                <input type="file" name="profile_picture" id="file-input">
                <input type="submit" value="사진 업로드">
            </form>
        </div>

        <!-- 오른쪽 상단: 회원 정보 -->
        <div class="user-info">
            <p>아이디: {{ user.username }}</p>
            <p>이메일: {{ user.email }}</p>
            <p>성: {{ user.last_name }}</p>
            <p>이름: {{ user.first_name }}</p>
        </div>
    </div>

    <!-- 프로필 사진 변경 버튼 아래: 작성한 글 목록 -->
    <div class="user-posts">
        <!-- 작성한 글 목록 출력 -->
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h2 class="card-title">최근 작성한 게시물</h2>
                        {% if user_posts %}
                            <ul class="list-group">
                                {% for post in user_posts %}
                                    <!-- 게시물 제목을 클릭하면 해당 게시물 상세 페이지로 이동 -->
                                    <li class="list-group-item">
                                        <a href="{% url 'post_detail' pk=post.pk %}">{{ post.title }}</a>
                                        (작성일: {{ post.created_at }})
                                    </li>
                                {% endfor %}
                            </ul>
                        {% else %}
                            <p class="card-text">아직 작성한 게시물이 없습니다.</p>
                        {% endif %}
                    </div>
                </div>
            </div>

            <!-- 다른 정보 표시 -->
            <div class="col-md-6">
                <!-- 다른 정보 내용 -->
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById('profile-upload-form').addEventListener('submit', function(event) {
        // 프로필 이미지 업로드 관련 자바스크립트 코드
        // ...
    });
</script>
{% endblock content %}
